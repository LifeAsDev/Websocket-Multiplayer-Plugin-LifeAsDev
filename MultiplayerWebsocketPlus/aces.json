{
	"$schema": "../aces.schema.json",
	"signalling": {
		"conditions": [
			{
				"id": "on-connected",
				"scriptName": "onConnectedToSgWs",
				"isTrigger": true
			},
			{
				"id": "on-logged-in",
				"scriptName": "onLoggedInToSgWs",
				"isTrigger": true
			},
			{
				"id": "is-connected",
				"scriptName": "isConnected",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "is-logged-in",
				"scriptName": "isLoggedIn",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "on-left-room",
				"scriptName": "onLeftRoom",
				"isTrigger": true
			},
			{
				"id": "is-in-room",
				"scriptName": "isInRoom",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "on-error",
				"scriptName": "onError",
				"isTrigger": true
			},
			{
				"id": "on-room-list",
				"scriptName": "onRoomList",
				"isTrigger": true
			},
			{
				"id": "on-game-instance-list",
				"scriptName": "onInstanceList",
				"isTrigger": true
			},
			{
				"id": "forEachClient",
				"scriptName": "forEachClient",
				"isLooping": true
			}
		],
		"actions": [
			{
				"id": "connect",
				"scriptName": "connect",
				"params": [
					{
						"id": "url",
						"type": "string",
						"initialValue": "\"wss://multiplayer.construct.net\""
					},
					{
						"id": "tag",
						"type": "string"
					}
				]
			},
			{
				"id": "log-in",
				"scriptName": "logIn",
				"params": [
					{
						"id": "alias",
						"type": "string"
					},
					{
						"id": "tag",
						"type": "string"
					}
				]
			},
			{
				"id": "simulate-latency",
				"scriptName": "simulateLatency",
				"params": [
					{
						"id": "latencyMs",
						"type": "number",
						"initialValue": "100"
					},
					{
						"id": "pdvMs",
						"type": "number",
						"initialValue": "30"
					},
					{
						"id": "lossPercent",
						"type": "number",
						"initialValue": "5"
					},
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "disconnect-room",
				"scriptName": "disconnectFromRoom",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "disconnect-signalling",
				"scriptName": "disconnectFromSignalling",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "leave-room",
				"scriptName": "leaveRoomOnSignalling",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "request-room-list",
				"scriptName": "requestRoomList",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					},
					{
						"id": "game",
						"type": "string"
					},
					{
						"id": "instance",
						"type": "string"
					},
					{
						"id": "which",
						"type": "combo",
						"items": ["all", "unlocked", "available"]
					}
				]
			},
			{
				"id": "request-game-instance-list",
				"scriptName": "requestInstanceList",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					},
					{
						"id": "game",
						"type": "string"
					}
				]
			}
		],
		"expressions": [
			{
				"id": "ErrorMessage",
				"expressionName": "ErrorMessage",
				"highlight": false,
				"returnType": "string"
			},
			{
				"id": "CurrentGame",
				"expressionName": "CurrentGame",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "CurrentInstance",
				"expressionName": "CurrentInstance",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "CurrentRoom",
				"expressionName": "CurrentRoom",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "ListRoomCount",
				"expressionName": "ListRoomCount",
				"highlight": false,
				"returnType": "number"
			},
			{
				"id": "ListRoomName",
				"expressionName": "ListRoomName",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "index",
						"type": "number",
						"description": "The index of the room in the list."
					}
				]
			},
			{
				"id": "ListRoomPeerCount",
				"expressionName": "ListRoomPeerCount",
				"highlight": false,
				"returnType": "number",
				"params": [
					{
						"id": "index",
						"type": "number",
						"description": "The index of the room in the list."
					}
				]
			},
			{
				"id": "ListRoomMaxPeerCount",
				"expressionName": "ListRoomMaxPeerCount",
				"highlight": false,
				"returnType": "number",
				"params": [
					{
						"id": "index",
						"type": "number",
						"description": "The index of the room in the list."
					}
				]
			},
			{
				"id": "ListRoomState",
				"expressionName": "ListRoomState",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "index",
						"type": "number",
						"description": "The index of the room in the list."
					}
				]
			},
			{
				"id": "ListInstanceCount",
				"expressionName": "ListInstanceCount",
				"highlight": false,
				"returnType": "number"
			},
			{
				"id": "ListInstanceName",
				"expressionName": "ListInstanceName",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "index",
						"type": "number",
						"description": "The index of the game instance in the list."
					}
				]
			},
			{
				"id": "ListInstancePeerCount",
				"expressionName": "ListInstancePeerCount",
				"highlight": false,
				"returnType": "number",
				"params": [
					{
						"id": "index",
						"type": "number",
						"description": "The index of the game instance in the list."
					}
				]
			},
			{
				"id": "currentClient",
				"expressionName": "CurrentClient",
				"returnType": "string"
			}
		]
	},
	"room": {
		"conditions": [
			{
				"id": "on-joined-room",
				"scriptName": "onJoinedRoom",
				"isTrigger": true
			},
			{
				"id": "on-peer-message",
				"scriptName": "onPeerMessage",
				"isTrigger": true,
				"params": [
					{
						"id": "tag",
						"type": "string"
					}
				]
			},
			{
				"id": "on-peer-connected",
				"scriptName": "onPeerConnected",
				"isTrigger": true
			},
			{
				"id": "is-host",
				"scriptName": "isHost",
				"params": [
					{
						"id": "tag",
						"type": "string"
					}
				]
			},
			{
				"id": "on-disconnected",
				"scriptName": "onDisconnectedFromSignalling",
				"isTrigger": true
			},
			{
				"id": "on-peer-disconnected",
				"scriptName": "onPeerDisconnected",
				"isTrigger": true
			},
			{
				"id": "on-kicked",
				"scriptName": "onKicked",
				"isTrigger": true
			},
			{
				"id": "on-any-peer-message",
				"scriptName": "onAnyPeerMessage",
				"isTrigger": true
			}
		],
		"actions": [
			{
				"id": "join-room",
				"scriptName": "joinRoom",
				"params": [
					{
						"id": "game",
						"type": "string"
					},
					{
						"id": "instance",
						"type": "string"
					},
					{
						"id": "room",
						"type": "string"
					},
					{
						"id": "tag",
						"type": "string"
					},
					{
						"id": "max-peers",
						"type": "number"
					}
				]
			},
			{
				"id": "auto-join-room",
				"scriptName": "autoJoinRoom",
				"params": [
					{
						"id": "game",
						"type": "string"
					},
					{
						"id": "instance",
						"type": "string"
					},
					{
						"id": "first-room",
						"type": "string"
					},
					{
						"id": "tag",
						"type": "string"
					},
					{
						"id": "max-peers",
						"type": "number"
					},
					{
						"id": "locking",
						"type": "combo",
						"items": ["dont-lock", "lock-when-full"]
					}
				]
			},
			{
				"id": "send-message",
				"scriptName": "sendPeerMessage",
				"params": [
					{
						"id": "peer-id",
						"type": "string"
					},
					{
						"id": "tag",
						"type": "string"
					},
					{
						"id": "clientTag",
						"type": "string"
					},
					{
						"id": "message",
						"type": "string"
					},
					{
						"id": "mode",
						"type": "combo",
						"items": ["reliable-unordered", "reliable-ordered", "unreliable"]
					}
				]
			}
		],
		"expressions": [
			{
				"id": "Message",
				"expressionName": "Message",
				"highlight": false,
				"returnType": "string"
			},
			{
				"id": "Tag",
				"expressionName": "Tag",
				"highlight": false,
				"returnType": "string"
			},
			{
				"id": "PeerID",
				"expressionName": "PeerID",
				"highlight": false,
				"returnType": "string"
			},
			{
				"id": "clientTag",
				"expressionName": "ClientTag",
				"highlight": false,
				"returnType": "string"
			},
			{
				"id": "MyID",
				"expressionName": "MyID",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "tag",
						"type": "string"
					}
				]
			},
			{
				"id": "PeerAlias",
				"expressionName": "PeerAlias",
				"highlight": false,
				"returnType": "string"
			},
			{
				"id": "HostID",
				"expressionName": "HostID",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "tag",
						"type": "string"
					}
				]
			},
			{
				"id": "LeaveReason",
				"expressionName": "LeaveReason",
				"returnType": "string",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "PeerCount",
				"expressionName": "PeerCount",
				"highlight": false,
				"returnType": "number",
				"params": [
					{
						"id": "clientTag",
						"type": "string",
						"description": "The client tag to identify the room."
					}
				]
			},
			{
				"id": "FromAlias",
				"expressionName": "FromAlias",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "FromID",
				"expressionName": "FromID",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "MyAlias",
				"expressionName": "MyAlias",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "HostAlias",
				"expressionName": "HostAlias",
				"highlight": false,
				"returnType": "string",
				"params": [
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			},
			{
				"id": "PeerIDFromAlias",
				"expressionName": "PeerIDFromAlias",
				"returnType": "string",
				"params": [
					{ "id": "alias", "type": "string" },
					{ "id": "clientTag", "type": "string", "autocompleteId": "clientTag" }
				]
			},
			{
				"id": "PeerAliasFromID",
				"expressionName": "PeerAliasFromID",
				"returnType": "string",
				"params": [
					{ "id": "peerid", "type": "string" },
					{ "id": "clientTag", "type": "string", "autocompleteId": "clientTag" }
				]
			},
			{
				"id": "PeerIDAt",
				"expressionName": "PeerIDAt",
				"returnType": "string",
				"params": [
					{ "id": "index", "type": "number" },
					{ "id": "clientTag", "type": "string", "autocompleteId": "clientTag" }
				]
			},
			{
				"id": "PeerAliasAt",
				"expressionName": "PeerAliasAt",
				"returnType": "string",
				"params": [
					{ "id": "index", "type": "number" },
					{ "id": "clientTag", "type": "string", "autocompleteId": "clientTag" }
				]
			}
		]
	},
	"roomHost": {
		"actions": [
			{
				"id": "broadcast-message",
				"scriptName": "broadcastMessage",
				"params": [
					{
						"id": "from-id",
						"type": "string"
					},
					{
						"id": "tag",
						"type": "string"
					},
					{
						"id": "clientTag",
						"type": "string"
					},
					{
						"id": "message",
						"type": "string"
					},
					{
						"id": "mode",
						"type": "combo",
						"items": ["reliable-unordered", "reliable-ordered", "unreliable"]
					}
				]
			},
			{
				"id": "kick-peer",
				"scriptName": "kickPeer",
				"params": [
					{
						"id": "peerId",
						"type": "string"
					},
					{
						"id": "reason",
						"type": "string"
					},
					{
						"id": "clientTag",
						"type": "string"
					}
				]
			}
		],
		"conditions": [],
		"expressions": []
	}
}
